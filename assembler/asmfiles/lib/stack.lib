#------------------------Tb16-Stack library-------------------------
#stack is iplemented in tb16 in the RAM itself and for an empty stack SP points to #address 0xffff. it is a descending type stack.
#this library performs PUSH/POP/PEEK using register R7(TR).
#-------------------------------------------------------------------
.push
    SBI SP,SP,1     #DECREMENT SP
    STRG TR,SP      #STORE AT SP
    RET

.pop
    LDRG TR,SP
    ADI SP,SP,1
    RET

.peek
    LDRG TR,SP
    RET
    
#------------SINGLE REGISTER OPS-------------------

.pushPC
    SBI SP,SP,1    
    STPC SP
    RET

.pushLR
    SBI SP,SP,1
    STRG LR,SP
    RET

.pushRegs
    SBI SP,SP,1  #PUSH R4
    STRG R4,SP
    SBI SP,SP,1  #PUSH R3
    STRG R3,SP
    SBI SP,SP,1  #PUSH R2
    STRG R2,SP
    SBI SP,SP,1  #PUSH R1
    STRG R1,SP
    SBI SP,SP,1  #PUSH R0
    STRG R0,SP
    SBI SP,SP,1  #PUSH LR
    STRG LR,SP
    RET

.popRegs
    LDRG LR,SP   #POP LR
    ADI SP,SP,1
    LDRG R0,SP   #POP R0
    ADI SP,SP,1
    LDRG R1,SP   #POP R1
    ADI SP,SP,1
    LDRG R2,SP   #POP R2
    ADI SP,SP,1
    LDRG R3,SP   #POP R3
    ADI SP,SP,1
    LDRG R4,SP   #POP R4
    ADI SP,SP,1
    RET

.prepare
    #store lr, store regs





.popRegs



  










.pushRegs
                	#save lr to tr before any function call

    MOV TR,LR   #LR (R6)
    JAL push

    MOV TR,R0
	JAL push	#R0

	MOV TR,R1
	JAL push	#R1

	MOV TR,R2
	JAL push	#R2

	MOV TR,R3
	JAL push	#R3

	MOV TR,R4
	JAL push	#R4

	RET

.popRegs
                	#save lr to tr before any function call
	MOV TR,LR

	JAL pop		#R4
	MOV R4,R0

	JAL pop		#R3
	MOV R3,R0

	JAL pop		#R2
	MOV R2,R0

	JAL pop		#R1
	MOV R1,R0

	JAL pop		#R0

	#restore lr
	MOV LR,TR

	RET

.pushPc
                #pushes program counter onto stack
